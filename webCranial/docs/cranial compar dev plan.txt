cranial code:
 - setup webserver + browserify single-page client + async [CHECK]

 - node secure login quick setup [CHECK] 
   * also you can just do app.get("/some_random_id", (req, res) => res.send(200))

 - automate file upload [CHECK]
   * put button [CHECK]
   * user browse to file path -> load via three.js obj reader [CHECK]

 - launch python script with path parameters [CHECK]
   * async child_process call to kick off stand-alone python process that dies when done [CHECK]
   * edit python script to use param as file name, and to write to local file when done [CHECK]
   * callback to update mesh coloring w/ curvature [CHECK]
   * if triggered, launch python curv. script and on success launch loadModel with coloring w/ curv and faces
	-where to get filename from? previously from the form...maybe it's still there? [CHECK]

 - github [CHECK]
   * git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch "*.sdf" HEAD
	[remote "origin"]
        url = https://syk435@bitbucket.org/syk435/cranial-comparative.git
        fetch = +refs/heads/*:refs/remotes/origin/*
	[branch "master"]
        remote = origin
        merge = refs/heads/master
 
 - registration python [CHECK]

 - allow file upload and visualize 2nd mesh [CHECK]
   * setup multiple scenes [CHECK]
   * secondary file upload [CHECK]
   * add to scene [CHECK]

 - curvature color 2nd mesh [CHECK]

 - calc and color curv. change [CHECK]
   * run Reg from node [CHECK]
   * read from Corr file from uploads [CHECK]
   * onto dup. of 2nd mesh [CHECK]

 - surface area change calculation 
   * print out nicely

 - calc asymmetry in JS client
   * print out nicely

 - nicer multi-scene and controls [CHECK]

 - scene text [CHECK]

 - demo page [CHECK]

 - delete patient data on server

 - secure login + page-by-page auth

 - viz scale (low to high curvature)

 - loading indicator

 - setup on azure node

 - try/catch python errors

 - only do SA calc for cranial

 - use browersify + watchify + beefy + uglify-js

 - allow >2 patient comparisions at a time

 - refactor code
   * cleanup comments
   * make functions + modules separate + callbacks properly
   * socket instead of get for python
 
 - unit tests

 - normative generation?

 - email/notification in tab when job completes

 - do curv calc + reg at very low decim, then render with post-subdiv for speedup

bioinformatics app
kinect motion + viz line flash 2 people
OCAF code
 -Asymmetry code:
  1. Get all unit vertex normal vectors n(xn, yn, zn) 
  2. Compute azimuth angle theta for each
  3. Compute elevation angle phi for each
  4. angle bins and mult. by norm mean curv
  5. compute LAFS, RAFS, AS from adding and selecting from bins
 -SA Change code:
  1. Compute DS using formulas ez
 -run on 5 cases, send
 -run on 10 more cases, send
l3uddi neural net proto
prov patent
inf reading
inf prog
ekg paper
graphic lec
dashboard, landing page
ppt DE cranial
scan cog rob lec
l3uddi concept vid (gif, 3 secs)
trials + sell discounted + testimonials from Colorado + Toronto
think of an overarching label for my work, website revamp
